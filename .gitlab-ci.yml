stages:
  - deploy

deploy image:
  stage: deploy

  image:
    name: docker
    # entrypoint: [""]

  services:
    - docker:dind

  # variables:
  #   # Tell docker CLI how to talk to Docker daemon; see
  #   # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  #   DOCKER_HOST: tcp://docker:2375/
  #   # Use the overlayfs driver for improved performance:
  #   DOCKER_DRIVER: overlay2
  #   DOCKER_TLS_CERTDIR: ""

  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin

  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

  after_script:
    - docker logout

  # Run this job in a branch where a Dockerfile exists
  # rules:
  #   - if: $CI_COMMIT_BRANCH
  #     exists:
  #       - Dockerfile
  #   - if: $CI_PIPELINE_SOURCE != "schedule"
  #   - if: '$CI_COMMIT_REF_NAME == "main" && $CI_PIPELINE_SOURCE == "schedule"'

  # artifacts:
  #   paths:
  #     - /usr/share/nginx/docs
